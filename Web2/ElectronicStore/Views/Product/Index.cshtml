@model PagedList.IPagedList<ElectronicStoreConnection.Product>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Products";
}

<!--new-products-->
<div class="new-products">
    <div class="container">
        <div class="agileinfo_new_products_grids">
            <h3>All Products</h3>
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Index", "Product", FormMethod.Get))
                    {
                        <div class="form-group col-md-2">
                            @Html.DropDownList("CateId", null, "Category", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-2">
                            @Html.DropDownList("BrandId", null, "Brand", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-2">
                            @Html.DropDownList("TypeId", null, "Type", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-5">
                            @Html.TextBox("SearchString", null, ViewBag.CurrentFilter as string, new { @multiple = true, @class = "form-control", @placeholder = "Keyword here..." })
                        </div>
                        <div class="form-group col-md-1">
                            <input type="submit" value="Filter" class="form-control btn btn-info" />
                        </div>
                    }
                </div>
            </div>
            @if (Model.Count > 0)
            {
                <div class="row">
                    <div class="col-md-12">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, currentBrand = ViewBag.CurrentBrand, currentCate = ViewBag.CurrentCate, currentType = ViewBag.CurrentType, currentFilter = ViewBag.CurrentFilter }), PagedListRenderOptions.ClassicPlusFirstAndLast)
                    </div>
                </div>
                foreach (var item in Model)
                {
                    <div class="col-md-3 agileinfo_new_products_grid" style="margin-bottom: 15px">
                        <div class="agile_ecommerce_tab_left agileinfo_new_products_grid1">
                            <div class="hs-wrapper hs-wrapper1">
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <img src="@item.ImageUrl" alt="" class="img-responsive" />
                                <div class="w3_hs_bottom w3_hs_bottom_sub">
                                    <ul>
                                        <li>
                                            <a href="/Product/Details/@item.Id"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <h5><a href="/Product/Details/@item.Id">@item.Name</a></h5>
                            <div class="simpleCart_shelfItem">
                                <p><span><i class="fa fa-usd" aria-hidden="true"></i>@((int)(item.Price*1.3))</span> <i class="item_price"><i class="fa fa-usd" aria-hidden="true"></i>@item.Price</i></p>
                                @using (Html.BeginForm("AddItem", "Cart", new { productId = item.Id, quantity = 1 }))
                                {
                                    <button type="submit" class="w3ls-cart">Add to cart</button>
                                }
                            </div>
                            @if (item.DateCreated >= DateTime.Now.AddDays(-7))
                            {
                                <div class="mobiles_grid_pos" style="left:207px;top:5px">
                                    <h6>New</h6>
                                </div>
                            }

                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-md-12">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, currentBrand = ViewBag.CurrentBrand, currentCate = ViewBag.CurrentCate, currentType = ViewBag.CurrentType, currentFilter = ViewBag.CurrentFilter }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-info"><h1>No product found!</h1></div>
                    </div>
                </div>
            }
            <div class="clearfix"> </div>
        </div>
    </div>
</div>
